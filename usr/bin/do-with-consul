#!/bin/bash

# Copyright (c) 2016 Coho Data Inc.
# The subject matter distributed under this license is or is based on
# information and material generated by Coho Data Inc. It may only be
# acquired, used, modified and distributed under the terms of the Coho
# Data Compute Cluster License v1.0.  Except as permitted in the Coho
# Data Compute Cluster License v1.0, all other rights are reserved in
# any copyright or other similar rights which may exist. Execution of
# software distributed under this Coho Data Compute Cluster License
# v1.0 may cause you to acquire third-party software (as described in
# the accompanying documentation) and you agree (a) to comply with the
# applicable licenses thereunder and (b) that Coho is not responsible
# in any way for your compliance or non-compliance with the applicable
# third-party licenses or the consequences of your being subject to
# said licenses or your compliance or non-compliance.

set -e
trap "{ if [ $WITH_CONSUL != false ]; then consul leave; fi }" TERM INT EXIT ERR

DOMAIN="${COHO_HADOOP_CLUSTER}.${COHO_TENANT}"

# Generate the node configuration for this container
function generate_node_config(){
  AGENT_TEMPLATE_PATH=/etc/consul.d/agent.json.template
  AGENT_JSON_PATH=/etc/consul.d/agent.json

  HOST=$(hostname -s)
  CONSUL_NODE_NAME="${HOST}.${DOMAIN}"

  echo "Generating Consul agent config..."
  if [ -f $AGENT_TEMPLATE_PATH ]; then
    sed -i "s/CONSUL_NODE_NAME/$CONSUL_NODE_NAME/" $AGENT_TEMPLATE_PATH
    mv $AGENT_TEMPLATE_PATH $AGENT_JSON_PATH
  fi
}

function start_consul(){
  CONSUL_LOGFILE=/var/log/consul.log
  echo "Running Consul agent... log file: $CONSUL_LOGFILE"

  consul agent -config-dir /etc/consul.d 2>&1 >$CONSUL_LOGFILE &

  set +e
  echo "Join Consul node on $CONSUL_IP"
  RETRIES=0

  consul join $CONSUL_IP

  # If cluster is not reachable yet, keep trying
  while [[ $? != 0 && $RETRIES -lt $CONSUL_RETRY_MAX || $CONSUL_RETRY_MAX == 0 ]]; do
    RETRIES=$((RETRIES + 1))
    echo "Wait $CONSUL_RETRY_INTERVAL seconds before retrying"
    sleep $CONSUL_RETRY_INTERVAL
    echo "Retry joining Consul cluster...retry number ${RETRIES}"
    consul join $CONSUL_IP
  done
  set -e
}

function configure_dns(){
  echo "Configuring DNS..."

  cat /etc/resolv.conf > /etc/resolv.conf.back
  echo "nameserver 127.0.0.1" > /etc/resolv.conf
  echo "search service.consul ${DOMAIN}.node.dc1.consul" >> /etc/resolv.conf
}

function wait_for_ip(){
  echo "Waiting for IP..."

  IP_RETRY_MAX=300
  RETRIES=0
  while [[ $RETRIES -lt $IP_RETRY_MAX ]]; do
    ADDRS=$(ip -o addr show)
    IP=$(echo "$ADDRS" | grep "inet " | awk '{print $4}' | sed '/^127.0.0.1/ d')
    [ ! -z "${IP}" ] && break
    RETRIES=$((RETRIES + 1))
    echo "$ADDRS"
    echo "Waiting for IP...retry number ${RETRIES}"
    sleep 1
  done

  if [[ -z "$IP" ]]; then
    echo "Could not acquire an IP"
    echo "Exiting..."
    exit 1
  else
    echo "Got IP $IP"
  fi
}

function reset_sshd() {
    echo "Reset and start sshd..."
    mkdir /var/run/sshd
    /bin/rm -v /etc/ssh/ssh_host_*
    /usr/sbin/dpkg-reconfigure openssh-server
    /usr/sbin/sshd &

    mkdir /root/.ssh
    chmod 700 /root/.ssh
    echo "${COHO_TENANT_INFO}" | /usr/bin/jq -r .ssh.public > /root/.ssh/authorized_keys
    chmod 600 /root/.ssh/authorized_keys
}

wait_for_ip

if [ "$WITH_CONSUL" != "false" ]; then
  if [ -z $CONSUL_IP ]; then
    echo "Consul IP not specified"
    echo "If you don't want to use it, set WITH_CONSUL=false"
    echo "Exiting..."
    exit 1
  fi

  generate_node_config

  start_consul

  reset_sshd

  configure_dns
fi

# For container debug purposes
if [ "$*" == "bash" ]; then
  $*
else
  $* &
  wait $!
fi
